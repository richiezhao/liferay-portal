@component-name = "portal-user-management-and-portal-configuration"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "User Groups";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONUser.tearDownNonAdminUsers();

			UserGroup.tearDownCP();

			Role.tearDownCP();

			Site.tearDownCP();

			Organization.tearDownCP();
		}
	}

	@priority = "3"
	test ExportUserGroupMembers {
		JSONUser.addUser(
			userEmailAddress = "userea1@liferay.com",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userScreenName = "usersn1");

		JSONUser.addUser(
			userEmailAddress = "userea2@liferay.com",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		LAR.exportUserGroups(larFileName = "User_Group_Members.lar");
	}

	@priority = "4"
	test UserGroupSiteOwnerPermissions {
		property custom.properties = "jsonws.web.service.paths.excludes=";
		property portal.release = "false";
		property test.name.skip.portal.instance = "UsergroupsUsecase#UserGroupSiteOwnerPermissions";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "User");

		for (var userNumber : list "1,2,3,4,5") {
			JSONUser.addUser(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userFirstName = "userfn${userNumber}",
				userLastName = "userln${userNumber}",
				userScreenName = "usersn${userNumber}");

			JSONUser.setFirstPassword(
				agreeToTermsAndAnswerReminderQuery = "true",
				requireReset = "false",
				userEmailAddress = "userea${userNumber}@liferay.com");
		}

		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignAllMembersCP(userGroupName = "UG UserGroup Name");

		JSONGroup.addGroup(groupName = "Site Name");

		JSONLayout.addPublicLayout(
			groupName = "Site Name",
			layoutName = "Site Page Name");

		JSONGroup.assignUserGroupToGroup(
			groupName = "Site Name",
			userGroupName = "UG UserGroup Name");

		JSONUserGroup.assignGroupRoleToUserGroup(
			groupName = "Site Name",
			roleTitle = "Site Owner",
			userGroupName = "UG UserGroup Name");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea3@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		LexiconEntry.changeDisplayStyle(displayStyle = "table");

		var key_userScreenName = "usersn3";

		AssertTextEquals.assertPartialText(
			locator1 = "SiteMemberships#USER_TABLE_NAME",
			value1 = "userfn3 userln3");

		AssertTextEquals(
			locator1 = "SiteMemberships#USER_TABLE_SCREEN_NAME",
			value1 = "usersn3");

		LexiconEntry.openEntryMenu(rowEntry = "userfn3 userln3");

		MenuItem.viewPresent(menuItem = "Assign Roles");

		User.logoutUserPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		ProductMenu.gotoPortlet(
			category = "People",
			portlet = "Memberships");

		Site.unassignSiteRoleToUserGroup(
			roleName = "Site Owner",
			userGroupName = "UG UserGroup Name");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea5@liferay.com");

		Navigator.openSiteURL(siteName = "Site Name");

		ApplicationsMenuHelper.openApplicationsMenu();

		Navigator.gotoNavTab(navTab = "Control Panel");

		AssertElementNotPresent(
			key_category = "Sites",
			locator1 = "ApplicationsMenu#CATEGORY");

		User.logoutUserPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		JSONRole.addRegularRole(
			roleKey = "Test UserGroup Role",
			roleTitle = "Test UserGroup Role");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_bookmarks_web_portlet_BookmarksAdminPortlet",
			roleTitle = "Test UserGroup Role");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.bookmarks",
			roleTitle = "Test UserGroup Role");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoAssignees(roleTitle = "Test UserGroup Role");

		RoleNavigator.gotoAssigneeType(assigneeType = "User Groups");

		Role.addAssignees(assigneeName = "UG UserGroup Name");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea1@liferay.com");

		ApplicationsMenuHelper.openApplicationsMenu();

		Navigator.gotoNavTab(navTab = "Control Panel");

		AssertElementNotPresent(
			key_category = "Sites",
			locator1 = "ApplicationsMenu#CATEGORY");

		User.logoutUserPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.removeMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "test");
	}

	@priority = "4"
	test UserGroupSiteTemplates {
		property test.name.skip.portal.instance = "UsergroupsUsecase#UserGroupSiteTemplates";

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Search");

		SearchAdministration.executeSearchActions(actionsDescription = "Reindex all search indexes.");

		JSONUser.addUser(
			userEmailAddress = "userea@liferay.com",
			userFirstName = "userfn",
			userLastName = "userln",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea@liferay.com",
			userScreenName = "usersn");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "test");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addSiteCP(
			userGroupName = "UG UserGroup Name",
			userGroupSite = "Community Site");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		var key_pageName = "Home";

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Profile");

		AssertTextPresent(
			locator1 = "Home#PAGE_2",
			value1 = "Home");

		AssertTextPresent(
			locator1 = "Home#PAGE_3",
			value1 = "Wiki");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Dashboard");

		if (IsElementPresent(locator1 = "Home#PAGE_2")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_2",
				value1 = "Home");
		}

		if (IsElementPresent(locator1 = "Home#PAGE_3")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_3",
				value1 = "Wiki");
		}

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		var key_pageName = "Home";

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Profile");

		if (IsElementPresent(locator1 = "Home#PAGE_2")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_2",
				value1 = "Home");
		}

		if (IsElementPresent(locator1 = "Home#PAGE_3")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_3",
				value1 = "Wiki");
		}

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Dashboard");

		if (IsElementPresent(locator1 = "Home#PAGE_2")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_2",
				value1 = "Home");
		}

		if (IsElementPresent(locator1 = "Home#PAGE_3")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_3",
				value1 = "Wiki");
		}

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea@liferay.com");

		UserBar.gotoDropdownItem(dropdownItem = "My Profile");

		var key_pageName = "Home";

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Profile");

		AssertTextPresent(
			locator1 = "Home#PAGE_2",
			value1 = "Home");

		AssertTextPresent(
			locator1 = "Home#PAGE_3",
			value1 = "Wiki");

		UserBar.gotoDropdownItem(dropdownItem = "My Dashboard");

		AssertTextPresent(
			locator1 = "Home#PAGE_1",
			value1 = "My Dashboard");

		if (IsElementPresent(locator1 = "Home#PAGE_2")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_2",
				value1 = "Home");
		}

		if (IsElementPresent(locator1 = "Home#PAGE_3")) {
			AssertTextNotEquals(
				locator1 = "Home#PAGE_3",
				value1 = "Wiki");
		}

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "test@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.removeMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "test");
	}

	@priority = "4"
	test ViewUserGroupPermissionsNoAsUser {
		JSONRole.addRegularRole(
			roleKey = "Roles Regrole Name",
			roleTitle = "Roles Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW_CONTROL_PANEL",
			resourceName = "90",
			roleTitle = "Roles Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "VIEW",
			resourceName = "com.liferay.portal.kernel.model.UserGroup",
			roleTitle = "Roles Regrole Name");

		Permissions.definePermissionViaJSONAPI(
			resourceAction = "ACCESS_IN_CONTROL_PANEL",
			resourceName = "com_liferay_user_groups_admin_web_portlet_UserGroupsAdminPortlet",
			roleTitle = "Roles Regrole Name");

		for (var userNumber : list "1,2,3") {
			JSONUser.addUser(
				userEmailAddress = "userea${userNumber}@liferay.com",
				userFirstName = "userfn${userNumber}",
				userLastName = "userln${userNumber}",
				userScreenName = "usersn${userNumber}");
		}

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.editPasswordCP(
			userEmailAddress = "userea1@liferay.com",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		User.assignRegularRoleCP(
			roleTitle = "Roles Regrole Name",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		Organization.addCP(
			orgName = "Organization Name",
			orgType = "Organization");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn1",
			userLastName = "userln1",
			userName = "userfn1 userln1",
			userScreenName = "usersn1");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Users and Organizations");

		UsersAndOrganizationsNavigator.gotoOrganizations();

		Organization.addMemberCP(
			orgName = "Organization Name",
			userFirstName = "userfn2",
			userLastName = "userln2",
			userName = "userfn2 userln2",
			userScreenName = "usersn2");

		JSONUserGroup.addUserGroup(
			userGroupDescription = "UG UserGroup Name Description",
			userGroupName = "UG UserGroup Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn2");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.assignMemberCP(
			userGroupName = "UG UserGroup Name",
			userScreenName = "usersn3");

		User.logoutPG();

		User.loginUserPG(
			password = "test",
			userEmailAddress = "userea1@liferay.com");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		var key_userGroupName = "UG UserGroup Name";

		AssertTextEquals(
			locator1 = "UserGroups#USER_GROUP_TABLE_NAME",
			value1 = "UG UserGroup Name");

		AssertElementNotPresent(locator1 = "UserGroups#USER_GROUP_TABLE_ACTIONS");

		User.logoutUserPG();

		User.loginPG(
			password = "test",
			userEmailAddress = "test@liferay.com");
	}

	@priority = "4"
	test ViewUserGroupSiteRolePermissions {
		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "Roles");

		RoleNavigator.gotoRoleType(roleType = "Site");

		Role.add(roleTitle = "Roles Siterole Name");

		ApplicationsMenu.gotoPortlet(
			category = "Users",
			panel = "Control Panel",
			portlet = "User Groups");

		UserGroup.addCP(userGroupName = "UG UserGroup Name");

		PermissionsInline.gotoUserGroupSitePermissionsCP(userGroupName = "UG UserGroup Name");

		var key_roleTitle = "Roles Siterole Name";

		SelectFrame(locator1 = "IFrame#MODAL_BODY");

		AssertTextEquals.assertPartialText(
			locator1 = "Permissions#CONTENT_PERMISSIONS_ROLE_NAME",
			value1 = "Roles Siterole Name");
	}

}